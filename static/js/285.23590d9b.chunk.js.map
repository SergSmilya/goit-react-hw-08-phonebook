{"version":3,"file":"static/js/285.23590d9b.chunk.js","mappings":"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","sources":["components/ContactItem/ContactItem.jsx","components/Contacts/Contacts.js","components/Filter/Filter.js","components/ContactForm/ContactForm.js","Pages/ContactsPage.jsx"],"sourcesContent":["import { Alert, ListItem, Snackbar, Typography } from '@mui/material';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { deleteContact } from 'redux/contacts/contactsOperation';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport ContactPhoneOutlinedIcon from '@mui/icons-material/ContactPhoneOutlined';\nimport { LoadingButton } from '@mui/lab';\nimport {\n  selectAddContact,\n  selectDeletedContact,\n  selectIsLoadingContacts,\n} from 'redux/selectors';\nimport React, { useEffect } from 'react';\n\nexport default function ContactItem({ contact }) {\n  const { id, name, number } = contact;\n  const isLoading = useSelector(selectIsLoadingContacts);\n  const nameDeletedContact = useSelector(selectDeletedContact);\n  const addContact = useSelector(selectAddContact);\n\n  const dispatch = useDispatch();\n  const [open, setOpen] = React.useState(false);\n\n  useEffect(() => {\n    if (nameDeletedContact || addContact.name) setOpen(true);\n    return;\n  }, [nameDeletedContact, addContact.name]);\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <>\n      <ListItem\n        sx={{\n          justifyContent: 'space-between',\n          border: '1px solid blue',\n          borderRadius: 1,\n          marginBottom: 1,\n        }}\n      >\n        <Typography\n          variant=\"subtitle1\"\n          sx={{ display: 'flex', alignItems: 'center' }}\n        >\n          <ContactPhoneOutlinedIcon sx={{ mr: 2 }} color=\"primary\" />\n          {name}:\n          <Typography ml={1} variant=\"subtitle2\" component=\"span\">\n            {number}\n          </Typography>\n        </Typography>\n\n        <LoadingButton\n          sx={{ opacity: 0.6, '&:hover, focus': { opacity: 1, color: 'red' } }}\n          color=\"warning\"\n          size=\"medium\"\n          variant=\"outlined\"\n          endIcon={<DeleteIcon />}\n          onClick={() => dispatch(deleteContact(id))}\n          loading={isLoading}\n          loadingPosition=\"end\"\n          type=\"button\"\n        >\n          delete contact\n        </LoadingButton>\n      </ListItem>\n\n      <div>\n        <Snackbar open={open} autoHideDuration={2000} onClose={handleClose}>\n          <Alert severity=\"warning\" sx={{ width: '100%' }}>\n            <Typography variant=\"h5\" component={'div'} color=\"inherit\" mr={1}>\n              {nameDeletedContact}:\n            </Typography>\n            <Typography variant=\"h6\" component={'span'}>\n              Deleted\n            </Typography>\n          </Alert>\n        </Snackbar>\n\n        {addContact.name && (\n          <Snackbar open={open} autoHideDuration={2000} onClose={handleClose}>\n            <Alert severity=\"success\">\n              <Typography variant=\"h5\" component={'div'} mr={1} color=\"inherit\">\n                {addContact.name}:\n              </Typography>\n              <Typography variant=\"h6\" component={'span'} mr={2}>\n                {addContact.number}:\n              </Typography>\n              <Typography variant=\"h6\" component={'span'}>\n                Added\n              </Typography>\n            </Alert>\n          </Snackbar>\n        )}\n      </div>\n    </>\n  );\n}\n","import { List } from '@mui/material';\nimport PropTypes from 'prop-types';\nimport ContactItem from 'components/ContactItem/ContactItem';\nimport React from 'react';\n\nexport default function Contacts({ contacts }) {\n  return (\n    <div>\n      <List>\n        {contacts.map(contact => (\n          <ContactItem key={contact.id} contact={contact} />\n        ))}\n      </List>\n    </div>\n  );\n}\n\nContacts.propTypes = {\n  contacts: PropTypes.arrayOf(PropTypes.object),\n};\n","import { InputAdornment, TextField } from '@mui/material';\nimport { useFormik } from 'formik';\nimport { useDispatch } from 'react-redux';\nimport { chancheFilterValue } from 'redux/filterSlice';\nimport PersonSearchIcon from '@mui/icons-material/PersonSearch';\n\nexport default function Filter() {\n  const dispatch = useDispatch();\n  const formik = useFormik({\n    initialValues: {\n      filter: '',\n    },\n  });\n\n  function searchFilter(e) {\n    const value = e.target.value.toLowerCase();\n    dispatch(chancheFilterValue(value));\n  }\n\n  return (\n    <div>\n      <form onChange={searchFilter}>\n        <TextField\n          InputProps={{\n            startAdornment: (\n              <InputAdornment position=\"start\">\n                <PersonSearchIcon color=\"primary\" />\n              </InputAdornment>\n            ),\n          }}\n          variant=\"outlined\"\n          margin=\"normal\"\n          fullWidth\n          id=\"filter\"\n          name=\"filter\"\n          label=\"Search\"\n          value={formik.values.filter}\n          type=\"search\"\n          // onChange={searchFilter}\n          onChange={formik.handleChange}\n          helperText={formik.touched.filter && formik.errors.filter}\n          placeholder=\"Enter name\"\n        />\n      </form>\n    </div>\n  );\n}\n","import { useFormik } from 'formik';\nimport * as yup from 'yup';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from 'redux/contacts/contactsOperation';\nimport { selectContacts, selectIsLoadingContacts } from 'redux/selectors';\nimport { LoadingButton } from '@mui/lab';\nimport PersonAddOutlinedIcon from '@mui/icons-material/PersonAddOutlined';\nimport { Box, TextField } from '@mui/material';\n\nexport default function ContactForm() {\n  const isLoading = useSelector(selectIsLoadingContacts);\n  const contacts = useSelector(selectContacts);\n  const dispatch = useDispatch();\n\n  // ValidationSchema\n  const Schema = yup.object({\n    name: yup.string().required(),\n    number: yup.number().required(),\n  });\n\n  const formik = useFormik({\n    initialValues: {\n      name: '',\n      number: '',\n    },\n    validationSchema: Schema,\n    onSubmit: (values, { resetForm }) => {\n      resetForm();\n\n      const dataNameLowerCase = values.name.toLowerCase().trim();\n\n      if (\n        contacts.find(el => dataNameLowerCase === el.name.toLowerCase().trim())\n      ) {\n        alert(`Contact was added`);\n        return;\n      }\n\n      dispatch(addContact(values));\n    },\n  });\n\n  return (\n    <div>\n      {/* Form */}\n      <form onSubmit={formik.handleSubmit}>\n        <Box mb={1} sx={{ display: 'flex', justifyContent: 'space-between' }}>\n          <TextField\n            variant=\"outlined\"\n            fullWidth\n            id=\"name\"\n            name=\"name\"\n            label=\"Name\"\n            type=\"text\"\n            value={formik.values.name}\n            onChange={formik.handleChange}\n            helperText={formik.touched.name && formik.errors.name}\n            placeholder=\"Enter name\"\n          />\n\n          <TextField\n            fullWidth\n            variant=\"outlined\"\n            id=\"number\"\n            name=\"number\"\n            label=\"Number\"\n            type=\"number\"\n            value={formik.values.number}\n            onChange={formik.handleChange}\n            helperText={formik.touched.number && formik.errors.number}\n            placeholder=\"Enter number\"\n            error={!formik.isValid}\n          />\n        </Box>\n        <LoadingButton\n          color=\"primary\"\n          size=\"medium\"\n          variant=\"outlined\"\n          endIcon={<PersonAddOutlinedIcon />}\n          loading={isLoading}\n          loadingPosition=\"end\"\n          type=\"submit\"\n          fullWidth\n        >\n          Add contact\n        </LoadingButton>\n      </form>\n    </div>\n  );\n}\n","import { useDispatch, useSelector } from 'react-redux';\nimport Contacts from 'components/Contacts/Contacts';\nimport Filter from 'components/Filter/Filter';\nimport { fetchContacts } from 'redux/contacts/contactsOperation';\nimport React, { useEffect } from 'react';\nimport ContactForm from 'components/ContactForm/ContactForm';\nimport { selectContacts, selectFilter, selectToken } from 'redux/selectors';\nimport { Typography } from '@mui/material';\n\nexport default function ContactsPage() {\n  const contacts = useSelector(selectContacts);\n  const filter = useSelector(selectFilter);\n  const token = useSelector(selectToken);\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (token) dispatch(fetchContacts());\n  }, [dispatch, token]);\n\n  const onFilterSearch = () => {\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter)\n    );\n  };\n\n  return (\n    <div>\n      <Typography\n        variant=\"h4\"\n        component={'h1'}\n        align=\"center\"\n        color={'inherit'}\n        mb={2}\n      >\n        Contacts\n      </Typography>\n\n      <ContactForm />\n\n      <Filter />\n      <Contacts contacts={onFilterSearch()} />\n    </div>\n  );\n}\n"],"names":["ContactItem","contact","id","name","number","isLoading","useSelector","selectIsLoadingContacts","nameDeletedContact","selectDeletedContact","addContact","selectAddContact","dispatch","useDispatch","React","open","setOpen","useEffect","handleClose","ListItem","sx","justifyContent","border","borderRadius","marginBottom","Typography","variant","display","alignItems","ContactPhoneOutlined","mr","color","ml","component","LoadingButton","opacity","size","endIcon","Delete","onClick","deleteContact","loading","loadingPosition","type","Snackbar","autoHideDuration","onClose","Alert","severity","width","Contacts","contacts","List","map","Filter","formik","useFormik","initialValues","filter","onChange","e","value","target","toLowerCase","chancheFilterValue","TextField","InputProps","startAdornment","InputAdornment","position","PersonSearch","margin","fullWidth","label","values","handleChange","helperText","touched","errors","placeholder","ContactForm","selectContacts","Schema","yup","required","validationSchema","onSubmit","resetForm","dataNameLowerCase","trim","find","el","alert","handleSubmit","Box","mb","error","isValid","PersonAddOutlined","ContactsPage","selectFilter","token","selectToken","fetchContacts","align","includes"],"sourceRoot":""}