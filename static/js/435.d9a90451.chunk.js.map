{"version":3,"file":"static/js/435.d9a90451.chunk.js","mappings":"uQAUMA,EAAeC,EAAAA,KAAaC,MAAM,CACtCC,KAAMF,EAAAA,KACHG,IAAI,EAAG,cACPC,IAAI,GAAI,aACRC,SAAS,YACZC,MAAON,EAAAA,KAAaM,MAAM,iBAAiBD,SAAS,YACpDE,SAAUP,EAAAA,KACPG,IAAI,EAAG,cACPC,IAAI,GAAI,aACRC,SAAS,cAGC,SAASG,IACtB,IAAMC,GAAWC,EAAAA,EAAAA,MAEXC,GAASC,EAAAA,EAAAA,IAAU,CACvBC,cAAe,CACbX,KAAM,GACNI,MAAO,GACPC,SAAU,IAEZO,iBAAkBf,EAClBgB,SAAU,SAACC,EAAD,IACRC,EADmC,EAAhBA,aAEnBR,GAASS,EAAAA,EAAAA,IAASF,GACnB,IAGH,OACE,4BACE,qCAEA,kBAAMD,SAAUJ,EAAOQ,aAAvB,WACE,SAACC,EAAA,EAAD,CACEC,WAAS,EACTC,GAAG,OACHpB,KAAK,OACLqB,MAAM,OACNC,OAAO,SACPC,MAAOd,EAAOK,OAAOd,KACrBwB,SAAUf,EAAOgB,aACjBC,MAAOjB,EAAOkB,QAAQ3B,MAAQ4B,QAAQnB,EAAOoB,OAAO7B,MACpD8B,WAAYrB,EAAOkB,QAAQ3B,MAAQS,EAAOoB,OAAO7B,QAGnD,SAACkB,EAAA,EAAD,CACEC,WAAS,EACTC,GAAG,QACHpB,KAAK,QACLqB,MAAM,QACNU,KAAK,QACLR,MAAOd,EAAOK,OAAOV,MACrBoB,SAAUf,EAAOgB,aACjBC,MAAOjB,EAAOkB,QAAQvB,OAASwB,QAAQnB,EAAOoB,OAAOzB,OACrD0B,WAAYrB,EAAOkB,QAAQvB,OAASK,EAAOoB,OAAOzB,SAGpD,SAACc,EAAA,EAAD,CACEC,WAAS,EACTC,GAAG,WACHpB,KAAK,WACLqB,MAAM,WACNC,OAAO,SACPC,MAAOd,EAAOK,OAAOT,SACrBmB,SAAUf,EAAOgB,aACjBC,MAAOjB,EAAOkB,QAAQtB,UAAYuB,QAAQnB,EAAOoB,OAAOxB,UACxDyB,WAAYrB,EAAOkB,QAAQtB,UAAYI,EAAOoB,OAAOxB,YAGvD,SAAC2B,EAAA,EAAD,CACEC,SAAS,EACTC,KAAK,QACLC,gBAAgB,QAChBC,WAAW,SAACC,EAAA,EAAD,IACXC,QAAQ,WACRP,KAAK,SANP,+BAaP,CC1Fc,SAASQ,IACtB,OAAO,SAACjC,EAAD,GACR,C","sources":["components/RegisterForm/RegisterForm.jsx","Pages/RegisterPage.jsx"],"sourcesContent":["// import { Button } from '@mui/material';\n// import { Formik, Field, Form, ErrorMessage, useFormik } from 'formik';\nimport { useDispatch } from 'react-redux';\nimport { register } from 'redux/auth/operations';\nimport * as Yup from 'yup';\nimport AppRegistrationOutlinedIcon from '@mui/icons-material/AppRegistrationOutlined';\nimport LoadingButton from '@mui/lab/LoadingButton';\nimport { TextField } from '@mui/material';\nimport { useFormik } from 'formik';\n\nconst SignupSchema = Yup.object().shape({\n  name: Yup.string()\n    .min(2, 'Too Short!')\n    .max(50, 'Too Long!')\n    .required('Required'),\n  email: Yup.string().email('Invalid email').required('Required'),\n  password: Yup.string()\n    .min(2, 'Too Short!')\n    .max(50, 'Too Long!')\n    .required('Required'),\n});\n\nexport default function RegisterForm() {\n  const dispatch = useDispatch();\n\n  const formik = useFormik({\n    initialValues: {\n      name: '',\n      email: '',\n      password: '',\n    },\n    validationSchema: SignupSchema,\n    onSubmit: (values, { resetForm }) => {\n      resetForm();\n      dispatch(register(values));\n    },\n  });\n\n  return (\n    <div>\n      <h1>Sign Up</h1>\n\n      <form onSubmit={formik.handleSubmit}>\n        <TextField\n          fullWidth\n          id=\"name\"\n          name=\"name\"\n          label=\"Name\"\n          margin=\"normal\"\n          value={formik.values.name}\n          onChange={formik.handleChange}\n          error={formik.touched.name && Boolean(formik.errors.name)}\n          helperText={formik.touched.name && formik.errors.name}\n        />\n\n        <TextField\n          fullWidth\n          id=\"email\"\n          name=\"email\"\n          label=\"Email\"\n          type=\"email\"\n          value={formik.values.email}\n          onChange={formik.handleChange}\n          error={formik.touched.email && Boolean(formik.errors.email)}\n          helperText={formik.touched.email && formik.errors.email}\n        />\n\n        <TextField\n          fullWidth\n          id=\"password\"\n          name=\"password\"\n          label=\"Password\"\n          margin=\"normal\"\n          value={formik.values.password}\n          onChange={formik.handleChange}\n          error={formik.touched.password && Boolean(formik.errors.password)}\n          helperText={formik.touched.password && formik.errors.password}\n        />\n\n        <LoadingButton\n          loading={false}\n          size=\"large\"\n          loadingPosition=\"start\"\n          startIcon={<AppRegistrationOutlinedIcon />}\n          variant=\"outlined\"\n          type=\"submit\"\n        >\n          Registration\n        </LoadingButton>\n      </form>\n    </div>\n  );\n}\n\n// export default function RegisterForm() {\n//   const dispatch = useDispatch();\n\n//   return (\n//     <div>\n//       <h1>Sign Up</h1>\n\n//       <Formik\n//         initialValues={{\n//           name: '',\n//           email: '',\n//           password: '',\n//         }}\n//         validationSchema={SignupSchema}\n//         onSubmit={(values, { resetForm }) => {\n//           resetForm();\n//           dispatch(register(values));\n//         }}\n//       >\n//         {({ errors, touched }) => (\n//           <Form>\n//             <TextField id=\"filled-basic\" label=\"Filled\" variant=\"filled\" />\n//             <label htmlFor=\"Name\">Name</label>\n//             <Field id=\"Name\" name=\"name\" placeholder=\"Jane\" autoFocus />\n//             <ErrorMessage component=\"div\" name=\"name\" />\n\n//             <label htmlFor=\"Email\">Email</label>\n//             <Field\n//               id=\"Email\"\n//               type=\"email\"\n//               name=\"email\"\n//               placeholder=\"jane@acme.com\"\n//             />\n//             <ErrorMessage component=\"div\" name=\"email\" />\n\n//             <label htmlFor=\"password\">Password</label>\n//             <Field id=\"password\" name=\"password\" />\n//             <ErrorMessage component=\"div\" name=\"password\" />\n\n//             {/* <Button\n//               variant=\"outlined\"\n//               size=\"large\"\n//               endIcon={<AppRegistrationOutlinedIcon />}\n//               fontSize=\"large\"\n//               type=\"submit\"\n//             >\n//               Registration\n//             </Button> */}\n\n//             <LoadingButton\n//               loading={false}\n//               size=\"large\"\n//               loadingPosition=\"start\"\n//               startIcon={<AppRegistrationOutlinedIcon />}\n//               variant=\"outlined\"\n//               type=\"submit\"\n//             >\n//               Registration\n//             </LoadingButton>\n//           </Form>\n//         )}\n//       </Formik>\n//     </div>\n//   );\n// }\n","import RegisterForm from 'components/RegisterForm/RegisterForm';\n\nexport default function RegisterPage() {\n  return <RegisterForm />;\n}\n"],"names":["SignupSchema","Yup","shape","name","min","max","required","email","password","RegisterForm","dispatch","useDispatch","formik","useFormik","initialValues","validationSchema","onSubmit","values","resetForm","register","handleSubmit","TextField","fullWidth","id","label","margin","value","onChange","handleChange","error","touched","Boolean","errors","helperText","type","LoadingButton","loading","size","loadingPosition","startIcon","AppRegistrationOutlined","variant","RegisterPage"],"sourceRoot":""}