{"version":3,"file":"static/js/435.f9db7d60.chunk.js","mappings":"yOAKMA,EAAeC,EAAAA,KAAaC,MAAM,CACtCC,KAAMF,EAAAA,KACHG,IAAI,EAAG,cACPC,IAAI,GAAI,aACRC,SAAS,YACZC,MAAON,EAAAA,KAAaM,MAAM,iBAAiBD,SAAS,YACpDE,SAAUP,EAAAA,KACPG,IAAI,EAAG,cACPC,IAAI,GAAI,aACRC,SAAS,cAGC,SAASG,IACtB,IAAMC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,4BACE,qCAEA,SAAC,KAAD,CACEC,cAAe,CACbT,KAAM,GACNI,MAAO,GACPC,SAAU,IAEZK,iBAAkBb,EAClBc,SAAU,SAACC,EAAD,IACRC,EADmC,EAAhBA,aAEnBN,GAASO,EAAAA,EAAAA,IAASF,GACnB,EAVH,SAYG,cAAGG,OAAH,EAAWC,QAAX,OACC,UAAC,KAAD,YACE,kBAAOC,QAAQ,OAAf,mBACA,SAAC,KAAD,CAAOC,GAAG,OAAOlB,KAAK,OAAOmB,YAAY,OAAOC,WAAS,KACzD,SAAC,KAAD,CAAcC,UAAU,MAAMrB,KAAK,UAEnC,kBAAOiB,QAAQ,QAAf,oBACA,SAAC,KAAD,CACEC,GAAG,QACHI,KAAK,QACLtB,KAAK,QACLmB,YAAY,mBAEd,SAAC,KAAD,CAAcE,UAAU,MAAMrB,KAAK,WAEnC,kBAAOiB,QAAQ,WAAf,uBACA,SAAC,KAAD,CAAOC,GAAG,WAAWlB,KAAK,cAC1B,SAAC,KAAD,CAAcqB,UAAU,MAAMrB,KAAK,cAEnC,mBAAQsB,KAAK,SAAb,4BAnBH,MAyBR,CC3Dc,SAASC,IACtB,OAAO,SAACjB,EAAD,GACR,C","sources":["components/RegisterForm/RegisterForm.jsx","Pages/RegisterPage.jsx"],"sourcesContent":["import { Formik, Field, Form, ErrorMessage } from 'formik';\nimport { useDispatch } from 'react-redux';\nimport { register } from 'redux/auth/operations';\nimport * as Yup from 'yup';\n\nconst SignupSchema = Yup.object().shape({\n  name: Yup.string()\n    .min(2, 'Too Short!')\n    .max(50, 'Too Long!')\n    .required('Required'),\n  email: Yup.string().email('Invalid email').required('Required'),\n  password: Yup.string()\n    .min(2, 'Too Short!')\n    .max(50, 'Too Long!')\n    .required('Required'),\n});\n\nexport default function RegisterForm() {\n  const dispatch = useDispatch();\n\n  return (\n    <div>\n      <h1>Sign Up</h1>\n\n      <Formik\n        initialValues={{\n          name: '',\n          email: '',\n          password: '',\n        }}\n        validationSchema={SignupSchema}\n        onSubmit={(values, { resetForm }) => {\n          resetForm();\n          dispatch(register(values));\n        }}\n      >\n        {({ errors, touched }) => (\n          <Form>\n            <label htmlFor=\"Name\">Name</label>\n            <Field id=\"Name\" name=\"name\" placeholder=\"Jane\" autoFocus />\n            <ErrorMessage component=\"div\" name=\"name\" />\n\n            <label htmlFor=\"Email\">Email</label>\n            <Field\n              id=\"Email\"\n              type=\"email\"\n              name=\"email\"\n              placeholder=\"jane@acme.com\"\n            />\n            <ErrorMessage component=\"div\" name=\"email\" />\n\n            <label htmlFor=\"password\">Password</label>\n            <Field id=\"password\" name=\"password\" />\n            <ErrorMessage component=\"div\" name=\"password\" />\n\n            <button type=\"submit\">Registration</button>\n          </Form>\n        )}\n      </Formik>\n    </div>\n  );\n}\n","import RegisterForm from 'components/RegisterForm/RegisterForm';\n\nexport default function RegisterPage() {\n  return <RegisterForm />;\n}\n"],"names":["SignupSchema","Yup","shape","name","min","max","required","email","password","RegisterForm","dispatch","useDispatch","initialValues","validationSchema","onSubmit","values","resetForm","register","errors","touched","htmlFor","id","placeholder","autoFocus","component","type","RegisterPage"],"sourceRoot":""}